# -*- coding: utf-8 -*-
"""Data Types.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IjA1NQ47UciW-Q7JabgyVu-MNXUigfhV

### **Data Types Introduction**

- **What are Data Types?**
    - In computer science, a data type is a classification that specifies which type of value a variable can hold. Think of it as a label for the kind of data (e.g., numbers, texts, true/false values) we're dealing with.
    - For instance, if we label something as a 'text' type, it means the variable will hold textual information like names, addresses, etc.

#### **Why Do We Need Different Data Types?**
1. **Efficiency:** Different data types use different amounts of memory. By choosing the right data type, we ensure our programs run efficiently.
2. **Precision:** Some tasks require precision. For instance, financial calculations might need decimal values instead of whole numbers.
3. **Clarity:** Using the right data type makes the code more readable and understandable.
4. **Error Prevention:** Certain operations are only valid for specific data types. Having the right type can prevent errors. For example, you wouldn't want to accidentally add someone's name to their age.

---

### **Integers and Floats**

#### **Definition and Examples of Integers and Floats**
- **Integers:**
    - These are whole numbers that can be positive, negative, or zero. They do not have decimal points.
    - Examples: -3, -2, -1, 0, 1, 2, 3, ...
- **Floats:**
    - Also known as floating-point numbers, these are numbers that have a decimal point.
    - They can represent real numbers (both rational and irrational numbers).
    - Examples: -3.5, 0.0, 2.71, 3.14, ...

#### **The Difference Between the Two**
1. **Representation:** Integers are whole numbers without a decimal point, while floats have a decimal point.
2. **Memory:** Floats typically require more memory than integers due to the precision they carry.
3. **Operations:** Some operations might yield different results. For instance, dividing two integers might truncate the result, whereas dividing two floats will retain the decimal portion.

#### **Practice: Create Variables of Integer and Float Types and Perform Basic Arithmetic Operations**
1. **Creating Variables:**
```python
int_variable = 5
float_variable = 5.5
```
2. **Arithmetic Operations:**
    - **Addition:** `int_variable + 3` will result in `8`, but `float_variable + 3` will result in `8.5`.
    - **Division:** `int_variable / 2` might differ in some languages in its result compared to `float_variable / 2`. In Python 3, both will return a float, but in some languages, integer division truncates the result.
    - **Multiplication:** `int_variable * 2` will result in `10`, and `float_variable * 2` will result in `11.0`.

3. **Experimentation:** Create your own integer and float variables and experiment with various arithmetic operations to observe the outcomes.

---
"""

integer_num = 2
float_num = 2.5

print(integer_num*float_num)

"""**1. Coffee Shop Calculator**
   
**Objective:** Calculate the total cost of items ordered at a coffee shop.

- **Instructions:**
   - Imagine you're visiting your favorite coffee shop.
   - Use the `input()` function to ask the user to specify the number of espressos, lattes, and muffins they'd like to "buy". Convert these to integer values.
   - Similarly, take user input for the prices of each item and convert these to float values.
   - Write a program to calculate and display the total cost.

---
"""

#Your code for exercise 1 in here

expressos_price = 6.99
lattes_price = 5.00
muffin_price = 3.99

print("How many espressos would you like?")
expressos_number = int(input())
print("How many lattes would you like?")
lattes_number = int(input())
print("how many muffins would you like to buy?")
muffin_number = int(input())

print("")
print("Final Price")
if expressos_number > 0:
  print("Expressos ", expressos_price*expressos_number)
if lattes_number > 0:
  print("Lattes ", lattes_price*lattes_number)
if muffin_number > 0:
  print("Muffuns ", muffin_number*muffin_number)

"""**2. Rocket Launch Countdown**
   
**Objective:** Simulate a rocket launch countdown.

- **Instructions:**
   - Use the `input()` function to ask the user for a starting countdown number and convert it to an integer.
   - Write a loop that subtracts 1 from the variable and prints the current countdown number each iteration.
   - Add a delay (using time.sleep in Python) of 0.5 seconds between each countdown number.

---

"""

#Your code for exercise 2 in here
import time
print("Countdown timer")
countdown_timer = int(input())
countdown_timer = countdown_timer - 1
while countdown_timer > 0:
  time.sleep(0.5)
  print(countdown_timer)
  countdown_timer = countdown_timer - 1
time.sleep(1)
print("Lift Off!")

"""**3. Your Weight on Other Planets**
   
**Objective:** Find out how much you'd weigh on different planets based on their gravity.

- **Instructions:**
   - Use the `input()` function to ask the user for their weight on Earth and convert this to a float.
   - Create float variables for the gravity factor of different planets (e.g., Mars is about 0.38 of Earth's gravity).
   - Calculate and display how much they'd weigh on each of these planets.

---
"""

#Exercise 3

print("What is your weight?")
weight = float(input())
mercury_weight = weight*0.38
venus_weight = weight*0.91
mars_weight = weight*0.38
jupiter_weight = weight*2.53
saturn_weight = weight*1.07
uranus_weight = weight*0.89
neptune_weight = weight*1.14
print("Your weight on Mercury ", round(mercury_weight,2))
print("Your weight on Venus ", round(venus_weight,2))
print("Your weight on Mars ", round(mars_weight,2))
print("Your weight on Jupiter ", round(jupiter_weight,2))
print("Your weight on Saturn ", round(saturn_weight,2))
print("Your weight on Uranus ", round(uranus_weight,2))
print("Your weight on Neptune ", round(neptune_weight,2))

"""print("Your weight on Mercury ", mercury_weight)**4. Pizza Party Calculator**
   
**Objective:** Calculate the cost per slice of pizza.

- **Instructions:**
   - Use the `input()` function to ask the user how many pizzas they bought and the total cost. Convert these values appropriately (integer for number of pizzas, float for cost).
   - Ask the user to specify how many slices each pizza has and convert this to an integer.
   - Calculate and display the cost per slice.

---
"""

#Exercise 4
print("How many pizzas did you buy?")
total_pizzas = int(input())
print("How much did it cost in total?")
pizza_price = float(input())
print("Each pizza cost ", round(pizza_price/total_pizzas,2))

"""
**5. Travel Budget Calculator**
   
**Objective:** Calculate the total budget required for a trip.

- **Instructions:**
   - Imagine you're planning a trip to your dream destination.
   - Use the `input()` function to ask the user for the number of days they plan to stay and convert this to an integer.
   - Ask the user to specify the estimated daily expenses for food, accommodation, and sightseeing. Convert these to float values.
   - Write a program to calculate and display the total estimated cost for the trip.

---"""

#Exercise 5
print("How many days are you planning to stay?")
number_days = int(input())
print("What is the daily estimated cost of food?")
daily_food = float(input())
print("What is the daily estimated cost of accommodation?")
daily_accommodation = float(input())
print("What is the daily estimated cost of sightseeing?")
daily_sightseeing = float(input())
total_daily_cost = daily_food+daily_accommodation+daily_sightseeing
print("The total estimated cost for your dream trip will be ", round(total_daily_cost*number_days,2), " dollars")